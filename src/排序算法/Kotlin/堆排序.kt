package 排序算法.Kotlin

/**
 * 堆排序：
 *
 *  堆排序（Heapsort） 是指利用堆这种数据结构所设计的一种排序算法。堆积是一个近似完全二叉树的结构，
 *  并同时满足堆积的性质：即子结点的键值或索引总是小于（或者大于）它的父节点。
 *
 *
 *  - 时间复杂度：O(nlogn)）
 *  - 空间复杂度： O(1)
 *  - 稳定性：不稳定排序。因为在堆的调整过程中，关键字进行比较和交换所走的是该结点到叶子结点的一条路径，
 *      因此对于相同的关键字就可能出现排在后面的关键字被交换到前面来的情况
 * @param array
 */
fun heapSort(array: Array<Int>) {
    val n = array.size
    //构建大顶堆
    //从构建的二叉树的叶子节点的上一层节点开始下沉操作，一直到索引为0的位置，也就是根节点，
    //此时所有需要下沉的节点都下沉了，就变成了大顶堆

}